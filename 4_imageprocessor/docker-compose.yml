services:
  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: imageprocessor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  migrator:
    image: migrate/migrate:v4.17.1
    container_name: migrator
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro
    command:
      - -path=/migrations
      - -database
      - postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/imageprocessor?sslmode=disable
      - up
  
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: ${S3_ACCESS_KEY}
      MINIO_SECRET_KEY: ${S3_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
  
  kafka:
      image: apache/kafka:latest
      container_name: kafka
      hostname: kafka
      expose:
        - "9092:9092"
        - "9093:9093"

      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_PROCESS_ROLES: broker,controller
        KAFKA_NODE_ID: 1
        KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:29092
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_LOG_DIRS: /var/lib/kafka/data
        CLUSTER_ID: test_id
      volumes:
        - kafka-data:/var/lib/kafka/data
      healthcheck:
        test: [ "CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092" ]
        interval: 5s
        timeout: 2s
        retries: 10

  init-kafka:
      image: apache/kafka:latest
      container_name: init-kafka
      depends_on:
        kafka:
          condition: service_healthy
      entrypoint: ["/bin/sh", "-c"]
      command: |
        "
        # blocks until kafka is reachable
        /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list

        echo -e 'Creating kafka topics'
        /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic uploaded --replication-factor 1 --partitions 1

        echo -e 'Following topics available:'
        /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list
        "

volumes:
  postgres_data:
  minio_data:
  kafka-data: